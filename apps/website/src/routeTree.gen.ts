/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as DashboardWalletRouteImport } from './routes/dashboard/wallet'
import { Route as DashboardRegisterRouteImport } from './routes/dashboard/register'
import { Route as AuthSignupRouteImport } from './routes/_auth/signup'
import { Route as AuthSigninRouteImport } from './routes/_auth/signin'
import { Route as DashboardUniversityIndexRouteImport } from './routes/dashboard/university/index'
import { Route as DashboardStudentRegistrationsRouteImport } from './routes/dashboard/_student/registrations'
import { Route as DashboardAdminValidationsRouteImport } from './routes/dashboard/_admin/validations'
import { Route as DashboardUniversityCampusIdIndexRouteImport } from './routes/dashboard/university/$campusId/index'
import { Route as DashboardUniversityCampusIdCareersCareerIdIndexRouteImport } from './routes/dashboard/university/$campusId/careers/$careerId/index'
import { Route as DashboardUniversityCampusIdCareersCareerIdPensumsPensumIdIndexRouteImport } from './routes/dashboard/university/$campusId/careers/$careerId/pensums/$pensumId/index'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardWalletRoute = DashboardWalletRouteImport.update({
  id: '/wallet',
  path: '/wallet',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardRegisterRoute = DashboardRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => AuthRouteRoute,
} as any)
const DashboardUniversityIndexRoute =
  DashboardUniversityIndexRouteImport.update({
    id: '/university/',
    path: '/university/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardStudentRegistrationsRoute =
  DashboardStudentRegistrationsRouteImport.update({
    id: '/_student/registrations',
    path: '/registrations',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardAdminValidationsRoute =
  DashboardAdminValidationsRouteImport.update({
    id: '/_admin/validations',
    path: '/validations',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardUniversityCampusIdIndexRoute =
  DashboardUniversityCampusIdIndexRouteImport.update({
    id: '/university/$campusId/',
    path: '/university/$campusId/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardUniversityCampusIdCareersCareerIdIndexRoute =
  DashboardUniversityCampusIdCareersCareerIdIndexRouteImport.update({
    id: '/university/$campusId/careers/$careerId/',
    path: '/university/$campusId/careers/$careerId/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardUniversityCampusIdCareersCareerIdPensumsPensumIdIndexRoute =
  DashboardUniversityCampusIdCareersCareerIdPensumsPensumIdIndexRouteImport.update(
    {
      id: '/university/$campusId/careers/$careerId/pensums/$pensumId/',
      path: '/university/$campusId/careers/$careerId/pensums/$pensumId/',
      getParentRoute: () => DashboardRouteRoute,
    } as any,
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/dashboard/register': typeof DashboardRegisterRoute
  '/dashboard/wallet': typeof DashboardWalletRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/validations': typeof DashboardAdminValidationsRoute
  '/dashboard/registrations': typeof DashboardStudentRegistrationsRoute
  '/dashboard/university': typeof DashboardUniversityIndexRoute
  '/dashboard/university/$campusId': typeof DashboardUniversityCampusIdIndexRoute
  '/dashboard/university/$campusId/careers/$careerId': typeof DashboardUniversityCampusIdCareersCareerIdIndexRoute
  '/dashboard/university/$campusId/careers/$careerId/pensums/$pensumId': typeof DashboardUniversityCampusIdCareersCareerIdPensumsPensumIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/dashboard/register': typeof DashboardRegisterRoute
  '/dashboard/wallet': typeof DashboardWalletRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/validations': typeof DashboardAdminValidationsRoute
  '/dashboard/registrations': typeof DashboardStudentRegistrationsRoute
  '/dashboard/university': typeof DashboardUniversityIndexRoute
  '/dashboard/university/$campusId': typeof DashboardUniversityCampusIdIndexRoute
  '/dashboard/university/$campusId/careers/$careerId': typeof DashboardUniversityCampusIdCareersCareerIdIndexRoute
  '/dashboard/university/$campusId/careers/$careerId/pensums/$pensumId': typeof DashboardUniversityCampusIdCareersCareerIdPensumsPensumIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/_auth/signin': typeof AuthSigninRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/dashboard/register': typeof DashboardRegisterRoute
  '/dashboard/wallet': typeof DashboardWalletRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/_admin/validations': typeof DashboardAdminValidationsRoute
  '/dashboard/_student/registrations': typeof DashboardStudentRegistrationsRoute
  '/dashboard/university/': typeof DashboardUniversityIndexRoute
  '/dashboard/university/$campusId/': typeof DashboardUniversityCampusIdIndexRoute
  '/dashboard/university/$campusId/careers/$careerId/': typeof DashboardUniversityCampusIdCareersCareerIdIndexRoute
  '/dashboard/university/$campusId/careers/$careerId/pensums/$pensumId/': typeof DashboardUniversityCampusIdCareersCareerIdPensumsPensumIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/signin'
    | '/signup'
    | '/dashboard/register'
    | '/dashboard/wallet'
    | '/dashboard/'
    | '/dashboard/validations'
    | '/dashboard/registrations'
    | '/dashboard/university'
    | '/dashboard/university/$campusId'
    | '/dashboard/university/$campusId/careers/$careerId'
    | '/dashboard/university/$campusId/careers/$careerId/pensums/$pensumId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/signin'
    | '/signup'
    | '/dashboard/register'
    | '/dashboard/wallet'
    | '/dashboard'
    | '/dashboard/validations'
    | '/dashboard/registrations'
    | '/dashboard/university'
    | '/dashboard/university/$campusId'
    | '/dashboard/university/$campusId/careers/$careerId'
    | '/dashboard/university/$campusId/careers/$careerId/pensums/$pensumId'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/dashboard'
    | '/_auth/signin'
    | '/_auth/signup'
    | '/dashboard/register'
    | '/dashboard/wallet'
    | '/dashboard/'
    | '/dashboard/_admin/validations'
    | '/dashboard/_student/registrations'
    | '/dashboard/university/'
    | '/dashboard/university/$campusId/'
    | '/dashboard/university/$campusId/careers/$careerId/'
    | '/dashboard/university/$campusId/careers/$careerId/pensums/$pensumId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/wallet': {
      id: '/dashboard/wallet'
      path: '/wallet'
      fullPath: '/dashboard/wallet'
      preLoaderRoute: typeof DashboardWalletRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/register': {
      id: '/dashboard/register'
      path: '/register'
      fullPath: '/dashboard/register'
      preLoaderRoute: typeof DashboardRegisterRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/signin': {
      id: '/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/dashboard/university/': {
      id: '/dashboard/university/'
      path: '/university'
      fullPath: '/dashboard/university'
      preLoaderRoute: typeof DashboardUniversityIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/_student/registrations': {
      id: '/dashboard/_student/registrations'
      path: '/registrations'
      fullPath: '/dashboard/registrations'
      preLoaderRoute: typeof DashboardStudentRegistrationsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/_admin/validations': {
      id: '/dashboard/_admin/validations'
      path: '/validations'
      fullPath: '/dashboard/validations'
      preLoaderRoute: typeof DashboardAdminValidationsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/university/$campusId/': {
      id: '/dashboard/university/$campusId/'
      path: '/university/$campusId'
      fullPath: '/dashboard/university/$campusId'
      preLoaderRoute: typeof DashboardUniversityCampusIdIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/university/$campusId/careers/$careerId/': {
      id: '/dashboard/university/$campusId/careers/$careerId/'
      path: '/university/$campusId/careers/$careerId'
      fullPath: '/dashboard/university/$campusId/careers/$careerId'
      preLoaderRoute: typeof DashboardUniversityCampusIdCareersCareerIdIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/university/$campusId/careers/$careerId/pensums/$pensumId/': {
      id: '/dashboard/university/$campusId/careers/$careerId/pensums/$pensumId/'
      path: '/university/$campusId/careers/$careerId/pensums/$pensumId'
      fullPath: '/dashboard/university/$campusId/careers/$careerId/pensums/$pensumId'
      preLoaderRoute: typeof DashboardUniversityCampusIdCareersCareerIdPensumsPensumIdIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface DashboardRouteRouteChildren {
  DashboardRegisterRoute: typeof DashboardRegisterRoute
  DashboardWalletRoute: typeof DashboardWalletRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardAdminValidationsRoute: typeof DashboardAdminValidationsRoute
  DashboardStudentRegistrationsRoute: typeof DashboardStudentRegistrationsRoute
  DashboardUniversityIndexRoute: typeof DashboardUniversityIndexRoute
  DashboardUniversityCampusIdIndexRoute: typeof DashboardUniversityCampusIdIndexRoute
  DashboardUniversityCampusIdCareersCareerIdIndexRoute: typeof DashboardUniversityCampusIdCareersCareerIdIndexRoute
  DashboardUniversityCampusIdCareersCareerIdPensumsPensumIdIndexRoute: typeof DashboardUniversityCampusIdCareersCareerIdPensumsPensumIdIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardRegisterRoute: DashboardRegisterRoute,
  DashboardWalletRoute: DashboardWalletRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardAdminValidationsRoute: DashboardAdminValidationsRoute,
  DashboardStudentRegistrationsRoute: DashboardStudentRegistrationsRoute,
  DashboardUniversityIndexRoute: DashboardUniversityIndexRoute,
  DashboardUniversityCampusIdIndexRoute: DashboardUniversityCampusIdIndexRoute,
  DashboardUniversityCampusIdCareersCareerIdIndexRoute:
    DashboardUniversityCampusIdCareersCareerIdIndexRoute,
  DashboardUniversityCampusIdCareersCareerIdPensumsPensumIdIndexRoute:
    DashboardUniversityCampusIdCareersCareerIdPensumsPensumIdIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
